
name: Deploy Sagemaker ECR

on:
  push:
      branches: [ main, development ]
  pull_request:
    # branches:
    #   - development
    #   - main
  # workflow_dispatch:


jobs:

  changed-files:
    name: Source File Diff
    # if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    outputs:
      file-diff: ${{ steps.changes.outputs.file-diff }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          echo "::set-output name=file-diff::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep container/*.py | xargs)"


  build:
    name: Build and push
    needs: changed-files

    if: ${{needs.changed-files.outputs.file-diff }}
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set Github env var based on branch name
      id: set-environment
      run: |
        echo ${GITHUB_REF_NAME#refs/heads/}
        if [[ ${GITHUB_REF_NAME#refs/heads/} == "main" ]]; then
          export ENVIRONMENT="production"
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        elif [[ ${GITHUB_REF_NAME#refs/heads/} == "development" ]]; then
          export ENVIRONMENT="development"
          export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
        else
          export ENVIRONMENT="sandbox"
          export AWS_ACCESS_KEY_ID=${{ secrets.SANDBOX_AWS_ACCESS_KEY_ID }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets.SANDBOX_AWS_SECRET_ACCESS_KEY }}
        fi
        echo $ENVIRONMENT
        echo "##[set-output name=environment;]$(echo $ENVIRONMENT)"
        echo "::set-output name=short-sha::$(git rev-parse --short ${{ github.sha }})"
        echo "::set-output name=aws_access_key_id::$(echo $AWS_ACCESS_KEY_ID)"
        echo "::set-output name=aws_secret_access_key::$(echo $AWS_SECRET_ACCESS_KEY)"


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ steps.set-environment.outputs.aws_access_key_id }}
        aws-secret-access-key: ${{ steps.set-environment.outputs.aws_secret_access_key }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sagemaker-run-notebook
        IMAGE_TAG: ${{ steps.set-environment.outputs.environment }}-${{ steps.set-environment.outputs.short-sha }} ## Change to {branch}-0.0.0
        IMAGE_LATEST_TAG: ${{ steps.set-environment.outputs.environment }}-latest     ## Change to {branch}-latest
      run: |
        echo "Building docker image"
        cd $PWD/file-diff && docker build -f Dockerfile -t $ECR_REPOSITORY .

        IMAGE_URI="$ECR_REGISTRY/$ECR_REPOSITORY"

        echo "Pushing docker image to $IMAGE_URI"
        echo "$IMAGE_URI:$IMAGE_TAG"
        docker image tag $ECR_REPOSITORY "$IMAGE_URI:$IMAGE_TAG"
        docker image tag $ECR_REPOSITORY "$IMAGE_URI:$IMAGE_LATEST_TAG"

        docker image push --all-tags "$IMAGE_URI"

        echo "::set-output name=image::$IMAGE_URI:$IMAGE_TAG"
